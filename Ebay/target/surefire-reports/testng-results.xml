<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="10" total="24" passed="11" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/ramdaneameur/IdeaProjects/general_Automation_Framework/Ebay/target/surefire-reports/html]]>
    </line>
    <line>
      <![CDATA[HomeClassTest: set Logo Sign Test]]>
    </line>
    <line>
      <![CDATA[HomeClassTest: set Logo Sign Validation Test]]>
    </line>
    <line>
      <![CDATA[HomeClassTest: set Logo Sign Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Boat Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Boat Verification Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Boat Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Classic Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Classic Verification Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Classic Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Motor Cycle Verification Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Motor Cycles Test]]>
    </line>
    <line>
      <![CDATA[MotorsClassTest: set Motor Cycles Test]]>
    </line>
    <line>
      <![CDATA[DragAndDropClassTest: set Drag And Drops Test]]>
    </line>
    <line>
      <![CDATA[DragAndDropClassTest: set Drag And Drops Validation Test]]>
    </line>
    <line>
      <![CDATA[DragAndDropClassTest: set Drag And Drops Test]]>
    </line>
    <line>
      <![CDATA[BrokenLinksTest: ebay Links Activlinks Test]]>
    </line>
    <line>
      <![CDATA[NewWindowClassTest: new Window Test]]>
    </line>
    <line>
      <![CDATA[NewWindowClassTest: new Window Test]]>
    </line>
    <line>
      <![CDATA[NewWindowClassTest: new Window Verification Test]]>
    </line>
    <line>
      <![CDATA[NewWindowClassTest: new Window Verification Test]]>
    </line>
    <line>
      <![CDATA[NewWindowClassTest: new Window Test]]>
    </line>
    <line>
      <![CDATA[NewWindowClassTest: new Window Test]]>
    </line>
    <line>
      <![CDATA[IFrameClassTest: set I Frame Test]]>
    </line>
  </reporter-output>
  <suite started-at="2020-09-02T23:10:09 EDT" name="TestSuite" finished-at="2020-09-02T23:14:33 EDT" duration-ms="264100">
    <groups>
    </groups>
    <test started-at="2020-09-02T23:10:09 EDT" name="Ebay Home" finished-at="2020-09-02T23:14:33 EDT" duration-ms="264100">
      <class name="homeTest.HomeClassTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:09 EDT" name="extentSetup" finished-at="2020-09-02T23:10:09 EDT" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@781a51d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/ramdaneameur/IdeaProjects/general_Automation_Framework/Ebay/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:09 EDT" name="setUp" finished-at="2020-09-02T23:10:12 EDT" duration-ms="2991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:12 EDT" name="startExtent" finished-at="2020-09-02T23:10:12 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.HomeClassTest.setLogoSignTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:12 EDT" name="init" finished-at="2020-09-02T23:10:12 EDT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setLogoSignTest()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:12 EDT" name="setLogoSignTest" finished-at="2020-09-02T23:10:14 EDT" duration-ms="2760" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomeClassTest: set Logo Sign Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setLogoSignTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:14 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:10:15 EDT" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setLogoSignTest status=SUCCESS method=HomeClassTest.setLogoSignTest()[pri:0, instance:homeTest.HomeClassTest@214b199c] output=HomeClassTest: set Logo Sign Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:15 EDT" name="cleanUp" finished-at="2020-09-02T23:10:15 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:15 EDT" name="setUp" finished-at="2020-09-02T23:10:17 EDT" duration-ms="1970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:17 EDT" name="startExtent" finished-at="2020-09-02T23:10:17 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.HomeClassTest.setLogoSignValidationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:17 EDT" name="init" finished-at="2020-09-02T23:10:17 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setLogoSignValidationTest()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:17 EDT" name="setLogoSignValidationTest" finished-at="2020-09-02T23:10:23 EDT" duration-ms="5848" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomeClassTest: set Logo Sign Validation Test]]>
            </line>
            <line>
              <![CDATA[HomeClassTest: set Logo Sign Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setLogoSignValidationTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:23 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:10:23 EDT" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setLogoSignValidationTest status=SUCCESS method=HomeClassTest.setLogoSignValidationTest()[pri:0, instance:homeTest.HomeClassTest@214b199c] output=HomeClassTest: set Logo Sign Validation Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:10:23 EDT" name="cleanUp" finished-at="2020-09-02T23:10:23 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:homeTest.HomeClassTest@214b199c]" started-at="2020-09-02T23:14:33 EDT" name="generateReport" finished-at="2020-09-02T23:14:33 EDT" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- homeTest.HomeClassTest -->
      <class name="regressionTest.IFrameClassTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9]" started-at="2020-09-02T23:14:30 EDT" name="setUp" finished-at="2020-09-02T23:14:32 EDT" duration-ms="2000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9]" started-at="2020-09-02T23:14:32 EDT" name="startExtent" finished-at="2020-09-02T23:14:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regressionTest.IFrameClassTest.setIFrameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9]" started-at="2020-09-02T23:14:32 EDT" name="init" finished-at="2020-09-02T23:14:32 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setIFrameTest()[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9]" started-at="2020-09-02T23:14:32 EDT" name="setIFrameTest" finished-at="2020-09-02T23:14:33 EDT" duration-ms="193" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[IFrameClassTest: set I Frame Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setIFrameTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9]" started-at="2020-09-02T23:14:33 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:14:33 EDT" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setIFrameTest status=SUCCESS method=IFrameClassTest.setIFrameTest()[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9] output=IFrameClassTest: set I Frame Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:regressionTest.IFrameClassTest@12d3a4e9]" started-at="2020-09-02T23:14:33 EDT" name="cleanUp" finished-at="2020-09-02T23:14:33 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- regressionTest.IFrameClassTest -->
      <class name="homeTest.MotorsClassTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:23 EDT" name="setUp" finished-at="2020-09-02T23:10:25 EDT" duration-ms="2011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:25 EDT" name="init" finished-at="2020-09-02T23:10:25 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:25 EDT" name="startExtent" finished-at="2020-09-02T23:10:25 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.MotorsClassTest.setBoatTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="setBoatTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:25 EDT" name="setBoatTest" finished-at="2020-09-02T23:10:32 EDT" duration-ms="7351" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[MotorsClassTest: set Boat Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setBoatTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:32 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:10:32 EDT" duration-ms="144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setBoatTest status=SUCCESS method=MotorsClassTest.setBoatTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a] output=MotorsClassTest: set Boat Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:32 EDT" name="cleanUp" finished-at="2020-09-02T23:10:32 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:32 EDT" name="setUp" finished-at="2020-09-02T23:10:34 EDT" duration-ms="2055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:34 EDT" name="startExtent" finished-at="2020-09-02T23:10:34 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.MotorsClassTest.setBoatVerificationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:34 EDT" name="init" finished-at="2020-09-02T23:10:34 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setBoatVerificationTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:34 EDT" name="setBoatVerificationTest" finished-at="2020-09-02T23:10:42 EDT" duration-ms="7347" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[MotorsClassTest: set Boat Verification Test]]>
            </line>
            <line>
              <![CDATA[MotorsClassTest: set Boat Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setBoatVerificationTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:42 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:10:42 EDT" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setBoatVerificationTest status=SUCCESS method=MotorsClassTest.setBoatVerificationTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a] output=MotorsClassTest: set Boat Verification Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:42 EDT" name="cleanUp" finished-at="2020-09-02T23:10:42 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:42 EDT" name="setUp" finished-at="2020-09-02T23:10:44 EDT" duration-ms="1982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:44 EDT" name="startExtent" finished-at="2020-09-02T23:10:44 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.MotorsClassTest.setClassicTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:44 EDT" name="init" finished-at="2020-09-02T23:10:44 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setClassicTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:44 EDT" name="setClassicTest" finished-at="2020-09-02T23:10:51 EDT" duration-ms="6924" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[MotorsClassTest: set Classic Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setClassicTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:51 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:10:51 EDT" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setClassicTest status=SUCCESS method=MotorsClassTest.setClassicTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a] output=MotorsClassTest: set Classic Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:51 EDT" name="cleanUp" finished-at="2020-09-02T23:10:51 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:51 EDT" name="setUp" finished-at="2020-09-02T23:10:53 EDT" duration-ms="2374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:53 EDT" name="startExtent" finished-at="2020-09-02T23:10:53 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.MotorsClassTest.setClassicVerificationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="setClassicVerificationTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:53 EDT" name="setClassicVerificationTest" finished-at="2020-09-02T23:11:00 EDT" duration-ms="6981" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[MotorsClassTest: set Classic Verification Test]]>
            </line>
            <line>
              <![CDATA[MotorsClassTest: set Classic Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setClassicVerificationTest -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:10:53 EDT" name="init" finished-at="2020-09-02T23:10:53 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:00 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:11:00 EDT" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setClassicVerificationTest status=SUCCESS method=MotorsClassTest.setClassicVerificationTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a] output=MotorsClassTest: set Classic Verification Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:00 EDT" name="setUp" finished-at="2020-09-02T23:11:03 EDT" duration-ms="2624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:00 EDT" name="cleanUp" finished-at="2020-09-02T23:11:00 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:03 EDT" name="init" finished-at="2020-09-02T23:11:03 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:03 EDT" name="startExtent" finished-at="2020-09-02T23:11:03 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.MotorsClassTest.setMotorCycleVerificationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="setMotorCycleVerificationTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:03 EDT" name="setMotorCycleVerificationTest" finished-at="2020-09-02T23:11:10 EDT" duration-ms="7386" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[MotorsClassTest: set Motor Cycle Verification Test]]>
            </line>
            <line>
              <![CDATA[MotorsClassTest: set Motor Cycles Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setMotorCycleVerificationTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:10 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:11:10 EDT" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setMotorCycleVerificationTest status=SUCCESS method=MotorsClassTest.setMotorCycleVerificationTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a] output=MotorsClassTest: set Motor Cycle Verification Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:10 EDT" name="cleanUp" finished-at="2020-09-02T23:11:10 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:10 EDT" name="setUp" finished-at="2020-09-02T23:11:13 EDT" duration-ms="2049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:13 EDT" name="startExtent" finished-at="2020-09-02T23:11:13 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void homeTest.MotorsClassTest.setMotorCyclesTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:13 EDT" name="init" finished-at="2020-09-02T23:11:13 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setMotorCyclesTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:13 EDT" name="setMotorCyclesTest" finished-at="2020-09-02T23:11:20 EDT" duration-ms="7830" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[MotorsClassTest: set Motor Cycles Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setMotorCyclesTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:20 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:11:20 EDT" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setMotorCyclesTest status=SUCCESS method=MotorsClassTest.setMotorCyclesTest()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a] output=MotorsClassTest: set Motor Cycles Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:homeTest.MotorsClassTest@20d3d15a]" started-at="2020-09-02T23:11:20 EDT" name="cleanUp" finished-at="2020-09-02T23:11:20 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- homeTest.MotorsClassTest -->
      <class name="regressionTest.DragAndDropClassTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:20 EDT" name="setUp" finished-at="2020-09-02T23:11:22 EDT" duration-ms="1871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="init()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:22 EDT" name="init" finished-at="2020-09-02T23:11:22 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:22 EDT" name="startExtent" finished-at="2020-09-02T23:11:22 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regressionTest.DragAndDropClassTest.setDragAndDropsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="setDragAndDropsTest()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:22 EDT" name="setDragAndDropsTest" finished-at="2020-09-02T23:11:32 EDT" duration-ms="10049" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:332)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:155)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
at org.openqa.selenium.json.JsonOutput.lambda$null$21(JsonOutput.java:168)
at java.base/java.util.LinkedHashMap$LinkedValues.forEach(LinkedHashMap.java:647)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:168)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
at org.openqa.selenium.json.JsonOutput.lambda$null$23(JsonOutput.java:177)
at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:65)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:176)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:255)
at org.openqa.selenium.json.Json.toJson(Json.java:42)
at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:227)
at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:618)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:639)
at regression.DragAndDropClass.setDragAndDrops(DragAndDropClass.java:34)
at regressionTest.DragAndDropClassTest.setDragAndDropsTest(DragAndDropClassTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:279)
at org.openqa.selenium.json.Json.toJson(Json.java:44)
... 41 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:328)
... 53 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'BANK')]"}
  (Session info: chrome=85.0.4183.83)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/wz/dgqm41w90yg...}, goog:chromeOptions: {debuggerAddress: localhost:54642}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: a7d8fc1d9c835157576185b9e393f255
*** Element info: {Using=xpath, value=//a[contains(text(),'BANK')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:204)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:155)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:75)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:84)
... 58 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
            <line>
              <![CDATA[DragAndDropClassTest: set Drag And Drops Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setDragAndDropsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:32 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:11:34 EDT" duration-ms="1459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setDragAndDropsTest status=FAILURE method=DragAndDropClassTest.setDragAndDropsTest()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87] output=DragAndDropClassTest: set Drag And Drops Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:34 EDT" name="cleanUp" finished-at="2020-09-02T23:11:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:34 EDT" name="setUp" finished-at="2020-09-02T23:11:36 EDT" duration-ms="2396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:36 EDT" name="startExtent" finished-at="2020-09-02T23:11:36 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regressionTest.DragAndDropClassTest.setDragAndDropsValidationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:36 EDT" name="init" finished-at="2020-09-02T23:11:36 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="setDragAndDropsValidationTest()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:36 EDT" name="setDragAndDropsValidationTest" finished-at="2020-09-02T23:11:46 EDT" duration-ms="10054" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:332)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:155)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
at org.openqa.selenium.json.JsonOutput.lambda$null$21(JsonOutput.java:168)
at java.base/java.util.LinkedHashMap$LinkedValues.forEach(LinkedHashMap.java:647)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:168)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
at org.openqa.selenium.json.JsonOutput.lambda$null$23(JsonOutput.java:177)
at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:65)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:176)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:255)
at org.openqa.selenium.json.Json.toJson(Json.java:42)
at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:227)
at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:618)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:639)
at regression.DragAndDropClass.setDragAndDrops(DragAndDropClass.java:34)
at regressionTest.DragAndDropClassTest.setDragAndDropsTest(DragAndDropClassTest.java:21)
at regressionTest.DragAndDropClassTest.setDragAndDropsValidationTest(DragAndDropClassTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:279)
at org.openqa.selenium.json.Json.toJson(Json.java:44)
... 42 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:328)
... 54 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'BANK')]"}
  (Session info: chrome=85.0.4183.83)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/wz/dgqm41w90yg...}, goog:chromeOptions: {debuggerAddress: localhost:54760}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 2d7fdf236553097c42c72ad5e77f616b
*** Element info: {Using=xpath, value=//a[contains(text(),'BANK')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:204)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:155)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:75)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:84)
... 59 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
            <line>
              <![CDATA[DragAndDropClassTest: set Drag And Drops Validation Test]]>
            </line>
            <line>
              <![CDATA[DragAndDropClassTest: set Drag And Drops Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- setDragAndDropsValidationTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:46 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:11:48 EDT" duration-ms="1257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setDragAndDropsValidationTest status=FAILURE method=DragAndDropClassTest.setDragAndDropsValidationTest()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87] output=DragAndDropClassTest: set Drag And Drops Validation Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:regressionTest.DragAndDropClassTest@2893de87]" started-at="2020-09-02T23:11:48 EDT" name="cleanUp" finished-at="2020-09-02T23:11:48 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- regressionTest.DragAndDropClassTest -->
      <class name="regressionTest.BrokenLinksTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:regressionTest.BrokenLinksTest@55ca8de8]" started-at="2020-09-02T23:11:48 EDT" name="setUp" finished-at="2020-09-02T23:11:50 EDT" duration-ms="2330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="init()[pri:0, instance:regressionTest.BrokenLinksTest@55ca8de8]" started-at="2020-09-02T23:11:50 EDT" name="init" finished-at="2020-09-02T23:11:51 EDT" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:regressionTest.BrokenLinksTest@55ca8de8]" started-at="2020-09-02T23:11:50 EDT" name="startExtent" finished-at="2020-09-02T23:11:50 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regressionTest.BrokenLinksTest.ebayLinksActivlinksTest() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ebayLinksActivlinksTest()[pri:40, instance:regressionTest.BrokenLinksTest@55ca8de8]" started-at="2020-09-02T23:11:51 EDT" name="ebayLinksActivlinksTest" finished-at="2020-09-02T23:14:14 EDT" duration-ms="142733" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: window was already closed
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/wz/dgqm41w90yg...}, goog:chromeOptions: {debuggerAddress: localhost:54892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 3d5e65625682fe50bcab17b43d8ec130]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: window was already closed
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/wz/dgqm41w90yg...}, goog:chromeOptions: {debuggerAddress: localhost:54892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 3d5e65625682fe50bcab17b43d8ec130
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getAttribute(RemoteWebElement.java:134)
at regression.BrokenLinks.linksbroken(BrokenLinks.java:47)
at regressionTest.BrokenLinksTest.ebayLinksActivlinksTest(BrokenLinksTest.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
            <line>
              <![CDATA[BrokenLinksTest: ebay Links Activlinks Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- ebayLinksActivlinksTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:regressionTest.BrokenLinksTest@55ca8de8]" started-at="2020-09-02T23:14:14 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:14:14 EDT" duration-ms="30" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ebayLinksActivlinksTest status=FAILURE method=BrokenLinksTest.ebayLinksActivlinksTest()[pri:40, instance:regressionTest.BrokenLinksTest@55ca8de8] output=BrokenLinksTest: ebay Links Activlinks Test]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: window was already closed
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/wz/dgqm41w90yg...}, goog:chromeOptions: {debuggerAddress: localhost:54892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 3d5e65625682fe50bcab17b43d8ec130]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: window was already closed
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MacBook-Pro-2.home', ip: 'fd4b:8d38:69ba:1:d141:bba4:860f:aef5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /var/folders/wz/dgqm41w90yg...}, goog:chromeOptions: {debuggerAddress: localhost:54892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 3d5e65625682fe50bcab17b43d8ec130
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at base.CommonAPI.captureScreenshot(CommonAPI.java:101)
at base.CommonAPI.afterEachTestMethod(CommonAPI.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:671)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:655)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:regressionTest.BrokenLinksTest@55ca8de8]" started-at="2020-09-02T23:14:14 EDT" name="cleanUp" finished-at="2020-09-02T23:14:14 EDT" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- regressionTest.BrokenLinksTest -->
      <class name="regressionTest.NewWindowClassTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:14 EDT" name="setUp" finished-at="2020-09-02T23:14:16 EDT" duration-ms="2222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:16 EDT" name="startExtent" finished-at="2020-09-02T23:14:16 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regressionTest.NewWindowClassTest.newWindowTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="init()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:16 EDT" name="init" finished-at="2020-09-02T23:14:16 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="newWindowTest()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:16 EDT" name="newWindowTest" finished-at="2020-09-02T23:14:22 EDT" duration-ms="5985" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[NewWindowClassTest: new Window Test]]>
            </line>
            <line>
              <![CDATA[NewWindowClassTest: new Window Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- newWindowTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:22 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:14:22 EDT" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newWindowTest status=SUCCESS method=NewWindowClassTest.newWindowTest()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934] output=NewWindowClassTest: new Window Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:22 EDT" name="cleanUp" finished-at="2020-09-02T23:14:22 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:22 EDT" name="setUp" finished-at="2020-09-02T23:14:24 EDT" duration-ms="1948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[catalina]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.ebay.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="init()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:24 EDT" name="init" finished-at="2020-09-02T23:14:24 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:24 EDT" name="startExtent" finished-at="2020-09-02T23:14:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regressionTest.NewWindowClassTest.newWindowVerificationTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="newWindowVerificationTest()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:24 EDT" name="newWindowVerificationTest" finished-at="2020-09-02T23:14:30 EDT" duration-ms="6199" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[NewWindowClassTest: new Window Verification Test]]>
            </line>
            <line>
              <![CDATA[NewWindowClassTest: new Window Verification Test]]>
            </line>
            <line>
              <![CDATA[NewWindowClassTest: new Window Test]]>
            </line>
            <line>
              <![CDATA[NewWindowClassTest: new Window Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- newWindowVerificationTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:30 EDT" name="afterEachTestMethod" finished-at="2020-09-02T23:14:30 EDT" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newWindowVerificationTest status=SUCCESS method=NewWindowClassTest.newWindowVerificationTest()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934] output=NewWindowClassTest: new Window Verification Test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:regressionTest.NewWindowClassTest@2c34f934]" started-at="2020-09-02T23:14:30 EDT" name="cleanUp" finished-at="2020-09-02T23:14:30 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- regressionTest.NewWindowClassTest -->
    </test> <!-- Ebay Home -->
  </suite> <!-- TestSuite -->
</testng-results>
